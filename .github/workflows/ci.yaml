name: Java CI with Selenide and Allure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    name: Run Selenide Tests with Selenoid
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      selenoid:
        image: aerokube/selenoid:latest-release
        ports:
          - 4444:4444
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /tmp/videos:/opt/selenoid/video
          - /tmp/config:/etc/selenoid
        env:
          OVERRIDE_VIDEO_OUTPUT_DIR: /opt/selenoid/video
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Prepare Selenoid config
        run: |
          mkdir -p /tmp/config
          echo '{
            "chrome": {
              "default": "latest",
              "versions": {
                "latest": {
                  "image": "selenoid/chrome:latest",
                  "port": "4444",
                  "path": "/",
                  "env": ["TZ=UTC"],
                  "volumes": ["/tmp/selenoid:/data"]
                }
              }
            }
          }' > /tmp/config/browsers.json

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Run tests with Selenoid
        run: |
          mvn clean test \
            -Dselenide.remote=http://selenoid:4444/wd/hub \
            -Dselenide.browser=chrome \
            -Dselenide.browserSize=1920x1080 \
            -Dselenide.timeout=10000 \
            -Dselenide.pageLoadStrategy=none

      - name: Cleanup Docker containers
        if: always()
        run: |
          # Stop all running browser containers
          docker ps -aq --filter "ancestor=selenoid/chrome" | xargs -r docker stop
          # Remove all stopped containers
          docker ps -aq | xargs -r docker rm -f
          # Remove all test-related volumes
          docker volume prune -f
          # Remove downloaded images
          docker images -q selenoid/chrome | xargs -r docker rmi

      - name: Verify test results
        run: |
          test -f target/surefire-reports/TEST-*.xml || { echo "Error: No test results found"; exit 1; }
          [ -n "$(ls -A target/allure-results 2>/dev/null)" ] || echo "Warning: Allure results are empty"

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: selenide-screenshots
          path: |
            build/reports/tests/
            target/selenide-screenshots/

      - name: Prepare Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: target/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy Allure Report
        if: success() || failure()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-history
          destination_dir: ./allure-history